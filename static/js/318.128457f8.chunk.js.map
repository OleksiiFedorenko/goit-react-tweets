{"version":3,"file":"static/js/318.128457f8.chunk.js","mappings":"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","sources":["store/filter/filterSelector.js","store/tweets/tweetsSelectors.js","common/utils.js","components/UserCard/UserCard.jsx","components/UserList/UserList.jsx","components/BackBtn/BackBtn.jsx","common/toastCreator.js","components/LoadMore/LoadMore.jsx","components/Filter/Filter.jsx","components/Error/Error.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'store/filter/filterSelector';\nimport { FILTER } from 'common/constants';\n\nexport const selectUsers = state => state.tweets.users;\nexport const selectFollowings = state => state.tweets.followings;\nexport const selectPage = state => state.tweets.page;\nexport const selectIsLoading = state => state.tweets.isLoading;\nexport const selectIsUpdating = state => state.tweets.isUpdating;\nexport const selectError = state => state.tweets.error;\n\nexport const selectFilteredTweets = createSelector(\n  [selectUsers, selectFollowings, selectFilter],\n  (users, followings, filter) => {\n    if (filter === FILTER.FOLLOWINGS)\n      return users.filter(({ id }) => followings.includes(id));\n\n    if (filter === FILTER.FOLLOW)\n      return users.filter(({ id }) => !followings.includes(id));\n\n    return users;\n  }\n);\n","export const numberWithCommas = x =>\n  x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  increaseFollowers,\n  decreaseFollowers,\n} from 'store/tweets/tweetsOperations';\nimport {\n  selectFollowings,\n  selectIsUpdating,\n} from 'store/tweets/tweetsSelectors';\nimport { numberWithCommas } from 'common/utils';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  Button,\n  Image,\n  Text,\n  Center,\n  Avatar,\n} from '@chakra-ui/react';\nimport {\n  cardStyles,\n  btnStyles,\n  txtStyles,\n  logoStyles,\n  lineStyles,\n  circleStyles,\n  avatarStyles,\n} from 'common/styles';\nimport logo from 'images/goit-logo.png';\nimport bg from 'images/card-bg.png';\nimport line from 'images/avatar-line.png';\nimport circle from 'images/avatar-circle.png';\n\nconst UserCard = ({ userData }) => {\n  const dispatch = useDispatch();\n  const followings = useSelector(selectFollowings);\n  const { status, id: updatingId } = useSelector(selectIsUpdating);\n  const { id, user, avatar, tweets, followers } = userData;\n  const isFollowing = followings.includes(id);\n  const isUpdating = status && updatingId === id;\n\n  const handleClick = () => {\n    if (isFollowing) dispatch(decreaseFollowers({ id, followers }));\n    else dispatch(increaseFollowers({ id, followers }));\n  };\n\n  return (\n    <Card sx={cardStyles}>\n      <Image src={logo} alt=\"GoIT logo\" sx={logoStyles} />\n      <Image src={line} alt=\"Card divider\" sx={lineStyles} />\n      <Image src={circle} alt=\"Avatar circle\" sx={circleStyles} />\n      <Avatar name={user} src={avatar} size=\"lg\" sx={avatarStyles} />\n      <CardBody p=\"0\" mb=\"26px\" textAlign=\"center\">\n        <Image src={bg} alt=\"Nice background\" mb=\"88px\" />\n        <Text sx={txtStyles} mb=\"16px\">\n          {numberWithCommas(tweets)} tweets\n        </Text>\n        <Text sx={txtStyles}>{numberWithCommas(followers)} followers</Text>\n      </CardBody>\n      <CardFooter as={Center} p=\"0\" textAlign=\"center\">\n        <Button\n          onClick={handleClick}\n          isLoading={isUpdating}\n          className={isFollowing ? 'following' : ''}\n          sx={btnStyles}\n        >\n          {isFollowing ? 'Following' : 'Follow'}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nUserCard.propTypes = {\n  userData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    user: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default UserCard;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredTweets } from 'store/tweets/tweetsSelectors';\nimport UserCard from 'components/UserCard/UserCard';\nimport { SimpleGrid, Center } from '@chakra-ui/react';\n\nconst UserList = () => {\n  const users = useSelector(selectFilteredTweets);\n\n  return (\n    <SimpleGrid minChildWidth=\"380px\" spacing=\"24px\">\n      {users.map(user => (\n        <Center key={user.id}>\n          <UserCard userData={user} />\n        </Center>\n      ))}\n    </SimpleGrid>\n  );\n};\n\nexport default UserList;\n","import { useNavigate } from 'react-router-dom';\nimport { Button } from '@chakra-ui/react';\nimport { smBtnStyles } from 'common/styles';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\n\nconst BackBtn = () => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate('/');\n  };\n\n  return (\n    <Button onClick={handleClick} leftIcon={<ArrowBackIcon />} sx={smBtnStyles}>\n      Back\n    </Button>\n  );\n};\n\nexport default BackBtn;\n","export const create = (title, description) => {\n  return {\n    title,\n    description,\n    status: 'warning',\n    variant: 'subtle',\n    position: 'top',\n    isClosable: true,\n  };\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMoreUsers } from 'store/tweets/tweetsOperations';\nimport {\n  selectFollowings,\n  selectPage,\n  selectIsLoading,\n} from 'store/tweets/tweetsSelectors';\nimport { selectFilter } from 'store/filter/filterSelector';\nimport { create } from 'common/toastCreator';\nimport { FILTER } from 'common/constants';\nimport { Button, useToast } from '@chakra-ui/react';\nimport { btnStyles } from 'common/styles';\n\nconst LoadMore = () => {\n  const dispatch = useDispatch();\n  const page = useSelector(selectPage);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectFilter);\n  const followings = useSelector(selectFollowings);\n  const toast = useToast();\n  const [limitReached, setLimitReached] = useState(false);\n\n  const handleClick = async () => {\n    const res = await dispatch(fetchMoreUsers(page)).unwrap();\n\n    if (res.length < 3) {\n      toast(create(\"You've reached the limit.\"));\n      setLimitReached(true);\n    }\n\n    if (filter === FILTER.FOLLOWINGS) {\n      if (res.some(el => followings.includes(el.id))) return;\n\n      toast(\n        create(\n          'No followings found in this batch.',\n          'Please try again or change the filter.'\n        )\n      );\n    }\n\n    if (filter === FILTER.FOLLOW) {\n      if (!res.every(el => followings.includes(el.id))) return;\n\n      toast(\n        create(\n          'No tweets to follow found in this batch.',\n          'Please try again or change the filter.'\n        )\n      );\n    }\n  };\n\n  if (limitReached) return null;\n\n  return (\n    <Button\n      onClick={handleClick}\n      isLoading={isLoading}\n      mt=\"24px\"\n      className=\"load-more\"\n      sx={btnStyles}\n    >\n      Load More\n    </Button>\n  );\n};\n\nexport default LoadMore;\n","import { useDispatch } from 'react-redux';\nimport { Box, Select, Tooltip } from '@chakra-ui/react';\nimport { setFilter } from 'store/filter/filterSlice';\nimport {\n  filterStyles,\n  filterOptionStyles,\n  colorBrandLight,\n} from 'common/styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Box w=\"200px\">\n      <Tooltip label=\"Filters out already loaded tweets\">\n        <Select\n          onChange={handleChange}\n          sx={filterStyles}\n          iconColor={colorBrandLight}\n        >\n          <option value=\"all\" style={filterOptionStyles}>\n            All\n          </option>\n          <option value=\"follow\" style={filterOptionStyles}>\n            Follow\n          </option>\n          <option value=\"followings\" style={filterOptionStyles}>\n            Followings\n          </option>\n        </Select>\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default Filter;\n","import { Heading } from '@chakra-ui/react';\n\nconst Error = () => {\n  return (\n    <Heading color=\"red.700\">\n      Something went wrong, please try again later.\n    </Heading>\n  );\n};\n\nexport default Error;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFirstUsers } from 'store/tweets/tweetsOperations';\nimport { selectError } from 'store/tweets/tweetsSelectors';\nimport { Box, Flex } from '@chakra-ui/react';\nimport { colorBrandLight } from 'common/styles';\n\nimport UserList from 'components/UserList/UserList';\nimport BackBtn from 'components/BackBtn/BackBtn';\nimport LoadMore from 'components/LoadMore/LoadMore';\nimport Filter from 'components/Filter/Filter';\nimport Error from 'components/Error/Error';\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchFirstUsers());\n  }, [dispatch]);\n\n  return (\n    <Box bg={colorBrandLight} minH=\"94.6vh\">\n      <Box maxW=\"1256px\" mx=\"auto\" py=\"24px\" px=\"34px\" textAlign=\"center\">\n        {error ? (\n          <Error />\n        ) : (\n          <>\n            <Flex justify=\"space-between\" gap=\"24px\" mb=\"24px\">\n              <BackBtn />\n              <Filter />\n            </Flex>\n            <UserList />\n            <LoadMore />\n          </>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Tweets;\n"],"names":["selectFilter","state","filter","selectFollowings","tweets","followings","selectPage","page","selectIsLoading","isLoading","selectIsUpdating","isUpdating","selectError","error","selectFilteredTweets","createSelector","users","FILTER","id","includes","numberWithCommas","x","toString","replace","userData","dispatch","useDispatch","useSelector","status","updatingId","user","avatar","followers","isFollowing","sx","cardStyles","src","alt","logoStyles","lineStyles","circleStyles","name","size","avatarStyles","p","mb","textAlign","bg","txtStyles","as","Center","onClick","decreaseFollowers","increaseFollowers","className","btnStyles","minChildWidth","spacing","map","navigate","useNavigate","leftIcon","smBtnStyles","create","title","description","variant","position","isClosable","toast","useToast","useState","limitReached","setLimitReached","handleClick","fetchMoreUsers","unwrap","res","length","some","el","every","mt","w","label","onChange","e","setFilter","target","value","filterStyles","iconColor","colorBrandLight","style","filterOptionStyles","color","useEffect","fetchFirstUsers","minH","maxW","mx","py","px","justify","gap"],"sourceRoot":""}