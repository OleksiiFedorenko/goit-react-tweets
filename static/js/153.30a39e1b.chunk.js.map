{"version":3,"file":"static/js/153.30a39e1b.chunk.js","mappings":"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","sources":["store/tweets/tweetsSelectors.js","store/filter/filterSelector.js","common/utils.js","components/UserCard/UserCard.jsx","components/UserList/UserList.jsx","components/BackBtn/BackBtn.jsx","components/LoadMore/LoadMore.jsx","components/Filter/Filter.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'store/filter/filterSelector';\n\nexport const selectUsers = state => state.tweets.users;\nexport const selectFollowings = state => state.tweets.followings;\nexport const selectPage = state => state.tweets.page;\nexport const selectIsLoading = state => state.tweets.isLoading;\nexport const selectIsUpdating = state => state.tweets.isUpdating;\nexport const selectError = state => state.tweets.error;\n\nexport const selectFilteredTweets = createSelector(\n  [selectUsers, selectFollowings, selectFilter],\n  (users, followings, filter) => {\n    if (filter === 'followings')\n      return users.filter(({ id }) => followings.includes(id));\n\n    if (filter === 'follow')\n      return users.filter(({ id }) => !followings.includes(id));\n\n    return users;\n  }\n);\n","export const selectFilter = state => state.filter;\n","export const numberWithCommas = x =>\n  x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  increaseFollowers,\n  decreaseFollowers,\n} from 'store/tweets/tweetsOperations';\nimport {\n  selectFollowings,\n  selectIsUpdating,\n} from 'store/tweets/tweetsSelectors';\nimport { numberWithCommas } from 'common/utils';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  Button,\n  Image,\n  Text,\n  Center,\n  Avatar,\n} from '@chakra-ui/react';\nimport {\n  cardStyles,\n  btnStyles,\n  txtStyles,\n  logoStyles,\n  lineStyles,\n  circleStyles,\n  avatarStyles,\n} from 'common/styles';\nimport logo from 'images/goit-logo.png';\nimport bg from 'images/card-bg.png';\nimport line from 'images/avatar-line.png';\nimport circle from 'images/avatar-circle.png';\n\nconst UserCard = ({ userData }) => {\n  const dispatch = useDispatch();\n  const followings = useSelector(selectFollowings);\n  const { status, id: updatingId } = useSelector(selectIsUpdating);\n  const { id, user, avatar, tweets, followers } = userData;\n  const isFollowing = followings.includes(id);\n  const isUpdating = status && updatingId === id;\n\n  const handleClick = () => {\n    if (isFollowing) dispatch(decreaseFollowers({ id, followers }));\n    else dispatch(increaseFollowers({ id, followers }));\n  };\n\n  return (\n    <Card sx={cardStyles}>\n      <Image src={logo} alt=\"GoIT logo\" sx={logoStyles} />\n      <Image src={line} alt=\"Card divider\" sx={lineStyles} />\n      <Image src={circle} alt=\"Avatar circle\" sx={circleStyles} />\n      <Avatar name={user} src={avatar} size=\"lg\" sx={avatarStyles} />\n      <CardBody p=\"0\" mb=\"26px\" textAlign=\"center\">\n        <Image src={bg} alt=\"Nice background\" mb=\"88px\" />\n        <Text sx={txtStyles} mb=\"16px\">\n          {numberWithCommas(tweets)} tweets\n        </Text>\n        <Text sx={txtStyles}>{numberWithCommas(followers)} followers</Text>\n      </CardBody>\n      <CardFooter as={Center} p=\"0\" textAlign=\"center\">\n        <Button\n          onClick={handleClick}\n          isLoading={isUpdating}\n          className={isFollowing ? 'following' : ''}\n          sx={btnStyles}\n        >\n          {isFollowing ? 'Following' : 'Follow'}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default UserCard;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredTweets } from 'store/tweets/tweetsSelectors';\nimport UserCard from 'components/UserCard/UserCard';\nimport { SimpleGrid, Center } from '@chakra-ui/react';\n\nconst UserList = () => {\n  const users = useSelector(selectFilteredTweets);\n\n  return (\n    <SimpleGrid minChildWidth=\"380px\" spacing=\"24px\">\n      {users.map(user => (\n        <Center key={user.id}>\n          <UserCard userData={user} />\n        </Center>\n      ))}\n    </SimpleGrid>\n  );\n};\n\nexport default UserList;\n","import { useNavigate } from 'react-router-dom';\nimport { Button } from '@chakra-ui/react';\nimport { smBtnStyles } from 'common/styles';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\n\nconst BackBtn = () => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate('/');\n  };\n\n  return (\n    <Button onClick={handleClick} leftIcon={<ArrowBackIcon />} sx={smBtnStyles}>\n      Back\n    </Button>\n  );\n};\n\nexport default BackBtn;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMoreUsers } from 'store/tweets/tweetsOperations';\nimport { selectPage, selectIsLoading } from 'store/tweets/tweetsSelectors';\nimport { Button, useToast } from '@chakra-ui/react';\nimport { btnStyles } from 'common/styles';\n\nconst LoadMore = () => {\n  const dispatch = useDispatch();\n  const page = useSelector(selectPage);\n  const isLoading = useSelector(selectIsLoading);\n  const toast = useToast();\n  const [limitReached, setLimitReached] = useState(false);\n\n  const handleClick = async () => {\n    const res = await dispatch(fetchMoreUsers(page)).unwrap();\n    if (res.length < 3) {\n      toast({\n        title: \"You've reached the limit.\",\n        status: 'warning',\n        variant: 'subtle',\n        position: 'top',\n        isClosable: true,\n      });\n      setLimitReached(true);\n    }\n  };\n\n  if (limitReached) return null;\n\n  return (\n    <Button\n      onClick={handleClick}\n      isLoading={isLoading}\n      mt=\"24px\"\n      className=\"load-more\"\n      sx={btnStyles}\n    >\n      Load More\n    </Button>\n  );\n};\n\nexport default LoadMore;\n","import { useDispatch } from 'react-redux';\nimport { Box, Select } from '@chakra-ui/react';\nimport { setFilter } from 'store/filter/filterSlice';\nimport {\n  filterStyles,\n  filterOptionStyles,\n  colorBrandLight,\n} from 'common/styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Box w=\"200px\">\n      <Select\n        onChange={handleChange}\n        sx={filterStyles}\n        iconColor={colorBrandLight}\n      >\n        <option value=\"all\" style={filterOptionStyles}>\n          All\n        </option>\n        <option value=\"follow\" style={filterOptionStyles}>\n          Follow\n        </option>\n        <option value=\"followings\" style={filterOptionStyles}>\n          Followings\n        </option>\n      </Select>\n    </Box>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchFirstUsers } from 'store/tweets/tweetsOperations';\nimport { Box, Flex } from '@chakra-ui/react';\nimport { colorBrandLight } from 'common/styles';\n\nimport UserList from 'components/UserList/UserList';\nimport BackBtn from 'components/BackBtn/BackBtn';\nimport LoadMore from 'components/LoadMore/LoadMore';\nimport Filter from 'components/Filter/Filter';\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchFirstUsers());\n  }, [dispatch]);\n\n  return (\n    <Box bg={colorBrandLight} minH=\"94.6vh\">\n      <Box maxW=\"1256px\" mx=\"auto\" py=\"24px\" px=\"34px\" textAlign=\"center\">\n        <Flex justify=\"space-between\" gap=\"24px\" mb=\"24px\">\n          <BackBtn />\n          <Filter />\n        </Flex>\n        <UserList />\n        <LoadMore />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Tweets;\n"],"names":["selectFollowings","state","tweets","followings","selectPage","page","selectIsLoading","isLoading","selectIsUpdating","isUpdating","selectFilteredTweets","createSelector","users","filter","id","includes","numberWithCommas","x","toString","replace","userData","dispatch","useDispatch","useSelector","status","updatingId","user","avatar","followers","isFollowing","sx","cardStyles","src","alt","logoStyles","lineStyles","circleStyles","name","size","avatarStyles","p","mb","textAlign","bg","txtStyles","as","Center","onClick","decreaseFollowers","increaseFollowers","className","btnStyles","minChildWidth","spacing","map","navigate","useNavigate","leftIcon","smBtnStyles","toast","useToast","useState","limitReached","setLimitReached","handleClick","fetchMoreUsers","unwrap","length","title","variant","position","isClosable","mt","w","onChange","e","setFilter","target","value","filterStyles","iconColor","colorBrandLight","style","filterOptionStyles","useEffect","fetchFirstUsers","minH","maxW","mx","py","px","justify","gap"],"sourceRoot":""}